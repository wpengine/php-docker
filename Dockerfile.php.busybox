FROM ubuntu:xenial as builder

ENV PHP7_PECL_MODULES imagick-3.4.3 redis-3.1.3 igbinary-2.0.1 memcached-3.0.3 ssh2-1.1.2 msgpack-2.0.2 uopz-5.0.2
ENV PHP5_PECL_MODULES imagick-3.4.3 redis-3.1.3 igbinary-2.0.1 memcached-2.2.0 ssh2-0.13 msgpack-0.5.7 runkit-1.0.4

ARG VERSION
ARG PHP_VERSION
ARG GPG_KEY1
ARG GPG_KEY2
ARG PHP_SHA256
ARG PHP_EXT_SUFFIX

ENV GPG_KEYS $GPG_KEY1 $GPG_KEY2

ENV PHP_INI_DIR /usr/local/etc/php
RUN mkdir -p $PHP_INI_DIR/conf.d

ENV PHP_EXT_PATH=/usr/local/lib/php/extensions/no-debug-non-zts-$PHP_EXT_SUFFIX
ENV PHP_CFLAGS="-fstack-protector-strong -fpic -fpie -O2"
ENV PHP_CPPFLAGS="$PHP_CFLAGS"
ENV PHP_LDFLAGS="-Wl,-O1 -Wl,--hash-style=both -pie"

ENV PHP_URL="https://secure.php.net/get/php-$PHP_VERSION.tar.xz/from/this/mirror" PHP_ASC_URL="https://secure.php.net/get/php-$PHP_VERSION.tar.xz.asc/from/this/mirror"
ENV PHP_MD5=""

ADD scripts/*.sh /usr/local/bin/

RUN set -ex; \
	\
 	apt-get update && apt-get install -y --no-install-recommends \
		autoconf build-essential ca-certificates curl dirmngr dpkg-dev file g++ gcc gettext gnupg2 \
		libbsd-dev libbz2-dev libc-client2007e-dev libc-dev libcurl3 libcurl3-dev libcurl4-openssl-dev \
		libedit-dev libedit2 libicu-dev libjpeg-dev libkrb5-dev libldap2-dev libmagick++-dev \
		libmagickwand-dev libmcrypt-dev libmemcached-dev libpcre3-dev libpng-dev libsqlite3-0 \
		libsqlite3-dev libssh2-1-dev libssl-dev libtinfo-dev libtool libxml2 libxml2-dev libxslt1-dev \
		make mlocate pax-utils pkg-config re2c wget xz-utils zlib1g-dev \
 	; \
	# Fix for missing library, required later during php configure/make.
	cp /usr/lib/libc-client.so.2007e.0 /usr/lib/x86_64-linux-gnu/libc-client.a; \

	# Build and install core PHP
	mkdir -p /usr/src; \
	cd /usr/src; \
	download_php.sh; \
	cd /usr/src/php-$PHP_VERSION/; \
	ADDITIONAL_OPTIONS=''; \
	if [ $VERSION = "5.6" ]; then ADDITIONAL_OPTIONS="--with-mysql"; fi; \
	./configure --build="x86_64-linux-gnu" --enable-fpm --enable-static --disable-shared \
	--with-fpm-user=www-data --with-fpm-group=www-data --with-config-file-path="$PHP_INI_DIR" \
	--with-config-file-scan-dir="$PHP_INI_DIR/conf.d" --with-bz2 --enable-bcmath \
	--enable-calendar --enable-dba --enable-exif --enable-ftp --with-gd --with-gettext \
	--with-kerberos --with-openssl --with-imap=/usr/lib --with-imap-ssl --with-png-dir=/usr \
	--with-jpeg-dir=/usr --enable-intl --with-ldap --with-mcrypt --with-mysqli --with-pdo-mysql \
	--enable-shmop --enable-soap --enable-sockets --enable-sysvmsg --enable-sysvsem \
	--enable-sysvshm --enable-wddx --with-xmlrpc --with-xsl --enable-zip --enable-mbstring \
	--enable-mysqlnd --with-curl --with-libedit --with-openssl --with-zlib --with-pcre-regex=/usr \
	--with-libdir="lib/x86_64-linux-gnu" $ADDITIONAL_OPTIONS; \
	make -j "$(nproc)"; \
	make install; \

	# Build and install pecl modules
	if [ $VERSION = "5.6" ]; then \
		PECL_MODULES=${PHP5_PECL_MODULES}; \
	else \
		PECL_MODULES=${PHP7_PECL_MODULES}; \
	fi; \
	for ext in $PECL_MODULES; do echo "\n" | pecl install $ext; done; \

	# Download the ioncube loader extension
	curl --connect-timeout 10 -o ioncube.tar.gz -fSL "https://downloads.ioncube.com/loader_downloads/ioncube_loaders_lin_x86-64.tar.gz"; \
	tar -zxvf ioncube.tar.gz; \
	cp ioncube/ioncube_loader_lin_$VERSION.so $PHP_EXT_PATH/ioncube.so; \
	rm -Rf ioncube*; \

	# Download the New Relic extension
	NR_VERSION="$( \
		curl --connect-timeout 10 -sS https://download.newrelic.com/php_agent/release/ \
			| sed -n 's/.*>\(.*linux\).tar.gz<.*/\1/p' \
	)"; \
	curl --connect-timeout 10 -o nr.tar.gz -fSL "https://download.newrelic.com/php_agent/release/$NR_VERSION.tar.gz"; \
	tar -xf nr.tar.gz; \
	cp $NR_VERSION/agent/x64/newrelic-$PHP_EXT_SUFFIX.so $PHP_EXT_PATH/newrelic.so; \
	rm -rf newrelic-php5* nr.tar.gz; \

	# Gather required runtime files from installed locations and copy them
	# to the .deploy folder which will serve as the new root folder for the 
	# final image.
	build_deploy_root.sh;

FROM busybox:glibc

ARG PHP_VERSION

WORKDIR /

COPY --from=builder /usr/src/php-$PHP_VERSION/.deploy/. .
COPY www.conf /usr/local/etc/php-fpm.conf
COPY php.ini /usr/local/etc/php/php.ini

EXPOSE 9000
CMD ["php-fpm"]
